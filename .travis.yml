language: objective-c
addons:
  apt:
    packages:
    - xvfb
rvm: 2.0.0
osx_image: xcode8
jdk: oraclejdk8
env:
  - JAVA_HOME=/usr/lib/jvm/java-8-oracle
cache:
  directories:
  - node_modules
before_install:
  #- ls /usr/lib/jvm
  # - gem install danger danger-xcode_summary xcpretty xcpretty-json-formatter
  - brew update
  - export CHROME_BIN=chromium-browser
  - source test/setup-android-ci.sh && installAndroidSDK
  - brew install nvm
  - source $(brew --prefix nvm)/nvm.sh
  - nvm install 4.2.1
  - brew install ios-webkit-debug-proxy
  - npm install -g macaca-cli
  #- npm install -g macaca-ios
  # - echo $JAVA_HOME
  - "JAVA_HOME=$(/usr/libexec/java_home) npm install -g macaca-android"
  - npm install
before_script:
  - "export DISPLAY=:99.0"
  # - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - android list targets 
  - echo no | android create avd --force -n test -t android-19 --abi default/x86
  - emulator -avd test -no-audio -no-window &
script:
  #- xcodebuild -project ios/sdk/WeexSDK.xcodeproj test -scheme WeexSDKTests CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -destination 'platform=iOS Simulator,name=iPhone 6' | XCPRETTY_JSON_FILE_OUTPUT=ios/sdk/xcodebuild.json xcpretty -f `xcpretty-json-formatter`
  #- bundle exec danger
  - ./test/serve.sh &
  # - ./test/run.sh ios
  - waitForEmulator #android-wait-for-emulator
  - ./test/run.sh
